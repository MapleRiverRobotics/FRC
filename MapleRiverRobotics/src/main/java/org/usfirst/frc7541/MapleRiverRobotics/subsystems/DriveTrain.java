// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc7541.MapleRiverRobotics.subsystems;


import org.usfirst.frc7541.MapleRiverRobotics.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.PWMTalonSRX;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class DriveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private PWMTalonSRX leftMaster;
    private PWMTalonSRX leftSlave;
    private PWMTalonSRX rightMaster;
    private PWMTalonSRX rightSlave;
    private RobotDrive speedControllers;
    private AnalogGyro gyro;
    private AnalogInput ultrasonic;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public DriveTrain() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        leftMaster = new PWMTalonSRX(1);
        addChild("LeftMaster",leftMaster);
        leftMaster.setInverted(false);
        
        leftSlave = new PWMTalonSRX(2);
        addChild("LeftSlave",leftSlave);
        leftSlave.setInverted(false);
        
        rightMaster = new PWMTalonSRX(3);
        addChild("RightMaster",rightMaster);
        rightMaster.setInverted(false);
        
        rightSlave = new PWMTalonSRX(4);
        addChild("RightSlave",rightSlave);
        rightSlave.setInverted(false);
        
        speedControllers = new RobotDrive(leftMaster, leftSlave,
              rightMaster, rightSlave);
        
        speedControllers.setSafetyEnabled(true);
        speedControllers.setExpiration(0.1);
        speedControllers.setSensitivity(0.5);
        speedControllers.setMaxOutput(1.0);
        speedControllers.setInvertedMotor(RobotDrive.MotorType.kFrontLeft, true);
        speedControllers.setInvertedMotor(RobotDrive.MotorType.kFrontRight, true);
        
        gyro = new AnalogGyro(0);
        addChild("Gyro",gyro);
        gyro.setSensitivity(0.007);
        
        ultrasonic = new AnalogInput(1);
        addChild("Ultrasonic",ultrasonic);
        
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new TeleOpDriveCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

